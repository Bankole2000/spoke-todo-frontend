{"version":3,"sources":["redux/action-types/index.ts","redux/actions/todoActions.ts","components/forms/NewTodoForm.tsx","utils/helpers.ts","components/Todos/TodoItem.tsx","components/Todos/TodoList.tsx","pages/TodoListPage.tsx","pages/TodoDetailsPage.tsx","App.tsx","reportWebVitals.ts","redux/reducers/todoReducer.ts","redux/reducers/index.ts","redux/sagas/todoSaga.ts","utils/config.ts","redux/sagas/index.ts","redux/store.ts","index.tsx"],"names":["ActionType","MessageType","TodoForm","dispatch","useDispatch","todos","useSelector","state","loading","useState","title","notes","completed","subtasks","newTodo","setNewTodo","hasSubtasks","sethasSubtasks","subTasks","setsubTasks","addSubtask","handleChange","e","console","log","target","value","name","addTodo","todo","type","CREATE_TODO_REQUEST","payload","style","width","display","flexDirection","alignItems","margin","position","TextField","label","onKeyPress","key","variant","color","onChange","fullWidth","required","Collapse","in","Boolean","marginBottom","multiline","rows","FormControlLabel","control","Checkbox","checked","size","flexGrow","Button","onClick","TransitionGroup","map","subtask","i","length","task","index","handleSubtaskChange","InputProps","startAdornment","InputAdornment","IconButton","filteredSubtasks","filter","removeSubtask","Clear","disabled","Add","endIcon","Send","Backdrop","sx","theme","palette","primary","main","zIndex","drawer","open","invisible","CircularProgress","formatTime","dateLike","date","Date","Intl","DateTimeFormat","year","month","day","hour","minute","hour12","format","TodoItem","Box","Card","minWidth","CardContent","Typography","component","mb","createdAt","CardActions","paddingLeft","paddingRight","Delete","TodoList","props","useEffect","GET_TODOS_REQUEST","maxWidth","Grid","container","justifyContent","spacing","item","xs","md","sm","id","TodoListPage","Container","TodoDetailsPage","gutterBottom","drawerWidth","useStyles","makeStyles","page","background","paddingTop","root","drawerPaper","active","appBar","marginLeft","createTheme","secondary","success","info","error","warning","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","routes","path","element","children","location","ReactLocation","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","errors","message","rootReducer","combineReducers","action","messageType","GET_TODOS_SUCCESS","GET_TODO_FAILED","CREATE_TODO_SUCCESS","getTodos","getTodoDetails","createTodo","todoSaga","apiUrl","getAll","fetch","method","headers","contentType","res","json","catch","call","data","put","request","body","JSON","stringify","takeEvery","rootSaga","all","configureStore","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","runSaga","run","ReactDOM","render","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.213e142b.chunk.js","sourcesContent":["import { Todo } from \"../../interfaces/TodoInterface\";\r\n\r\nexport enum ActionType {\r\n  GET_TODOS_REQUEST = \"GET_TODOS_REQUEST\",\r\n  GET_TODOS_SUCCESS = \"GET_TODOS_SUCCESS\",\r\n  GET_TODOS_FAILED = \"GET_TODOS_FAILED\",\r\n  GET_TODO_REQUEST = \"GET_TODO_REQUEST\",\r\n  GET_TODO_SUCCESS = \"GET_TODO_SUCCESS\",\r\n  GET_TODO_FAILED = \"GET_TODO_FAILED\",\r\n  CREATE_TODO_REQUEST = \"CREATE_TODO_REQUEST\",\r\n  CREATE_TODO_SUCCESS = \"CREATE_TODO_SUCCESS\",\r\n  CREATE_TODO_FAILED = \"CREATE_TODO_FAILED\",\r\n  UPDATE_TODO_REQUEST = \"UPDATE_TODO_REQUEST\",\r\n  UPDATE_TODO_SUCCESS = \"UPDATE_TODO_SUCCESS\",\r\n  UPDATE_TODO_FAILED = \"UPDATE_TODO_FAILED\",\r\n  DELETE_TODO_REQUEST = \"DELETE_TODO_REQUEST\",\r\n  DELETE_TODO_SUCCESS = \"DELETE_TODO_SUCCESS\",\r\n  DELETE_TODO_FAILED = \"DELETE_TODO_FAILED\",\r\n  DELETE_TODOS_REQUEST = \"DELETE_TODOS_REQUEST\",\r\n  DELETE_TODOS_SUCCESS = \"DELETE_TODOS_SUCCESS\",\r\n  DELETE_TODOS_FAILED = \"DELETE_TODOS_FAILED\",\r\n}\r\n\r\nexport enum MessageType {\r\n  success = \"success\",\r\n  warning = \"warning\",\r\n  info = \"info\",\r\n  error = \"error\",\r\n  null = \"\"\r\n}\r\n\r\nexport interface GET_TODOS {\r\n  type: ActionType.GET_TODOS_REQUEST | ActionType.GET_TODOS_SUCCESS | ActionType.GET_TODOS_FAILED,\r\n  message?: string,\r\n  todos?: Todo[],\r\n}\r\n\r\nexport interface GET_TODO {\r\n  type: ActionType.GET_TODO_REQUEST | ActionType.GET_TODO_SUCCESS | ActionType.GET_TODO_FAILED,\r\n  payload: number | string,\r\n  error?: string[]\r\n  message?: string\r\n}\r\n\r\nexport interface CREATE_TODO {\r\n  type: ActionType.CREATE_TODO_REQUEST | ActionType.CREATE_TODO_SUCCESS | ActionType.CREATE_TODO_FAILED,\r\n  payload: Todo, \r\n  error?: string[]\r\n  message?: string\r\n}\r\n\r\ninterface UPDATE_TODO {\r\n  type: ActionType.UPDATE_TODO_REQUEST,\r\n  payload: Todo\r\n}\r\n\r\ninterface DELETE_TODO {\r\n  type: ActionType.DELETE_TODO_REQUEST,\r\n  payload: number | string,\r\n}\r\n\r\ninterface DELETE_TODOS {\r\n  type: ActionType.DELETE_TODOS_REQUEST,\r\n  payload?: number | string\r\n}\r\n\r\nexport type Action = GET_TODO | GET_TODOS | CREATE_TODO | UPDATE_TODO | DELETE_TODO | DELETE_TODOS;","import { Todo } from '../../interfaces/TodoInterface';\r\nimport { ActionType, CREATE_TODO, GET_TODO } from '../action-types/index';\r\n\r\nexport const getTodos = () => {\r\n  return {\r\n    type: ActionType.GET_TODOS_REQUEST,\r\n  }\r\n}\r\n\r\nexport const getSingleTodo = (id: number | string) : GET_TODO => {\r\n  return {\r\n    type: ActionType.GET_TODO_REQUEST,\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const createTodo = (todo: Todo) : CREATE_TODO => {\r\n  return {\r\n    type: ActionType.CREATE_TODO_REQUEST,\r\n    payload: todo\r\n  }\r\n}","import { Button, TextField, Checkbox, Collapse, FormControlLabel, InputAdornment, IconButton, Backdrop, CircularProgress } from \"@mui/material\";\r\nimport { Send as SendIcon, Add as AddIcon, Clear as ClearIcon } from '@mui/icons-material';\r\nimport { FunctionComponent, useState } from \"react\";\r\nimport { TransitionGroup } from 'react-transition-group';\r\nimport { Subtask, Todo } from \"../../interfaces/TodoInterface\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/reducers\";\r\n\r\nimport { createTodo, getTodos } from '../../redux/actions/todoActions';\r\n\r\n\r\n\r\ninterface TodoFormProps {\r\n\r\n}\r\n\r\nconst TodoForm: FunctionComponent<TodoFormProps> = () => {\r\n  const dispatch = useDispatch();\r\n  const todos = useSelector((state: RootState) => state.todos[\"todos\"])\r\n  const loading = useSelector((state: RootState) => state.todos[\"loading\"])\r\n  const [newTodo, setNewTodo] = useState<Todo>({\r\n    title: '',\r\n    notes: '',\r\n    completed: false,\r\n    subtasks: []\r\n  })\r\n  let [hasSubtasks, sethasSubtasks] = useState(false);\r\n  const [subTasks, setsubTasks] = useState<Subtask[]>([\r\n    {\r\n      title: '',\r\n      completed: false,\r\n    }\r\n  ])\r\n  const toggleHasSubtasks = () => {\r\n    sethasSubtasks(!hasSubtasks);\r\n    if (!hasSubtasks) {\r\n      setsubTasks([\r\n        {\r\n          title: '',\r\n          completed: false,\r\n        }\r\n      ])\r\n    }\r\n  }\r\n\r\n  const addSubtask = () => {\r\n    const newSubtask: Subtask = { title: '', completed: false }\r\n    setsubTasks([\r\n      ...subTasks,\r\n      newSubtask\r\n    ])\r\n  }\r\n  const removeSubtask = (i: number) => {\r\n    const filteredSubtasks = subTasks.filter((task, index) => index !== i);\r\n    setsubTasks(filteredSubtasks);\r\n  }\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    console.log(e.target.value)\r\n    setNewTodo(\r\n      {\r\n        ...newTodo,\r\n        [e.target.name]: e.target.value\r\n      }\r\n    )\r\n  }\r\n  const handleSubtaskChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, i: number) => {\r\n    console.log(e.target.value, i)\r\n    setsubTasks(subTasks.map((task, index) =>\r\n      index == i\r\n        ? { ...task, [e.target.name]: e.target.value }\r\n        : task\r\n    ));\r\n  }\r\n  const markAsCompleted = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setNewTodo(\r\n      {\r\n        ...newTodo,\r\n        completed: e.target.checked\r\n      }\r\n    )\r\n  }\r\n\r\n  const addTodo = () => {\r\n    if (hasSubtasks) {\r\n      newTodo.subtasks = subTasks\r\n    }\r\n    console.log({ newTodo })\r\n    dispatch(createTodo(newTodo))\r\n    setNewTodo(\r\n      {\r\n        title: '',\r\n        notes: '',\r\n        completed: false,\r\n        subtasks: []\r\n      }\r\n    )\r\n    sethasSubtasks(false)\r\n    setsubTasks([\r\n      {\r\n        title: '',\r\n        completed: false,\r\n      }\r\n    ])\r\n    console.log({todos})\r\n  }\r\n\r\n  const submitIfEnter = (e : React.KeyboardEvent<HTMLDivElement>) => {\r\n    console.log({key: e.key})\r\n    if(e.key == 'Enter'){\r\n      addTodo();\r\n    }\r\n  }\r\n  return (\r\n    <div style={{ width: '80vw', display: 'flex', flexDirection: 'column', alignItems: 'center', margin: '20px auto', position: 'relative' }}>\r\n      <TextField\r\n        style={{ margin: '20px 20px' }}\r\n        label=\"Add A Todo\"\r\n        onKeyPress={submitIfEnter}\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        name=\"title\" value={newTodo.title} onChange={handleChange}\r\n        fullWidth\r\n        required\r\n      ></TextField>\r\n      <Collapse in={Boolean(newTodo.title)} style={{ width: '100%' }}>\r\n        <TextField\r\n          style={{ marginBottom: '10px', width: '100%' }}\r\n          label=\"Notes\"\r\n          value={newTodo.notes}\r\n          onChange={handleChange}\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          name=\"notes\"\r\n          fullWidth\r\n          multiline\r\n          rows={2}\r\n        ></TextField>\r\n        <div style={{ display: 'flex', alignItems: 'center', marginBottom: '20px' }}>\r\n          <FormControlLabel control={<Checkbox onChange={markAsCompleted} name=\"completed\" color=\"success\" size=\"medium\" checked={newTodo.completed} />} label=\"Mark as completed\" />\r\n          <div style={{ flexGrow: 1 }}></div>\r\n          <Button onClick={toggleHasSubtasks}>{`${hasSubtasks ? 'Remove' : 'Add'}`} Subtasks</Button>\r\n        </div>\r\n      </Collapse>\r\n      <Collapse in={hasSubtasks} style={{ width: '100%' }}>\r\n        <TransitionGroup>\r\n          {subTasks.map((subtask, i) => (\r\n            <Collapse key={i}>\r\n              <div style={{ display: 'flex', alignItems: 'center' }} key={i}>\r\n                <TextField\r\n                  style={{ margin: '0px 10px 20px' }}\r\n                  label=\"Subtask\"\r\n                  variant=\"standard\"\r\n                  color=\"secondary\"\r\n                  name=\"title\" value={subtask.title} onKeyPress={(e) => {\r\n                    if (e.key == \"Enter\" && i == subTasks.length - 1) addSubtask()\r\n                  }} \r\n                  onChange={(e) => handleSubtaskChange(e, i)}\r\n                  fullWidth\r\n                  InputProps={{\r\n                    startAdornment: <InputAdornment position=\"start\">{i + 1}.</InputAdornment>,\r\n                  }}\r\n                ></TextField>\r\n                {subTasks.length > 1 && <IconButton onClick={() => removeSubtask(i)} color=\"error\">\r\n                  <ClearIcon></ClearIcon>\r\n                </IconButton>}\r\n                {i === subTasks.length - 1 &&\r\n                  <IconButton disabled={!Boolean(subtask.title)} onClick={addSubtask} color=\"info\">\r\n                    <AddIcon></AddIcon>\r\n                  </IconButton>\r\n                }\r\n              </div>\r\n            </Collapse>\r\n          ))}\r\n        </TransitionGroup>\r\n      </Collapse>\r\n\r\n      <Button onClick={addTodo} fullWidth size=\"large\" variant=\"contained\" disabled={!Boolean(newTodo.title)} color=\"primary\" endIcon={<SendIcon style={{ color: 'white' }} />}><span style={{ color: 'white' }}>Save </span></Button>\r\n      <Backdrop\r\n        sx={{ color: (theme) => theme.palette.primary.main, zIndex: (theme) => theme.zIndex.drawer + 1, position: 'absolute' }}\r\n        open={loading}\r\n        invisible\r\n      >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      {/* {JSON.stringify(todos)}\r\n      <hr />\r\n      {JSON.stringify(loading)} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoForm;","export const formatTime = (dateLike: any): string => {\r\n  const date = new Date(dateLike);\r\n  return new Intl.DateTimeFormat('en-US', {\r\n    year: 'numeric', month: 'short', day: 'numeric',\r\n    hour: 'numeric', minute: 'numeric',\r\n    hour12: true,\r\n  }).format(new Date(date))\r\n}","import * as React from 'react';\r\nimport { Todo } from '../../interfaces/TodoInterface';\r\nimport { formatTime } from '../../utils/helpers';\r\nimport { Card, CardContent, Typography, CardActions, Button, Box, FormControlLabel, Checkbox, IconButton } from '@mui/material';\r\nimport { Delete as DeleteIcon } from '@mui/icons-material';\r\n\r\ninterface ITodoItemProps {\r\n  todo: Todo,\r\n}\r\n\r\nconst bull = (\r\n  <Box\r\n    component=\"span\"\r\n    sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\r\n  >\r\n    •\r\n  </Box>\r\n);\r\n\r\nconst TodoItem: React.FunctionComponent<ITodoItemProps> = ({ todo }) => {\r\n  return (\r\n    <div>\r\n      <Card sx={{ minWidth: 275 }}>\r\n        <CardContent>\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <Typography color=\"text.primary\" variant=\"h5\" component=\"div\">\r\n              {todo.title}\r\n            </Typography>\r\n          </div>\r\n          <Typography variant=\"body2\" sx={{ mb: 1 }} color=\"text.secondary\">\r\n            {formatTime(todo.createdAt)}\r\n          </Typography>\r\n          <Typography color={todo.notes ? 'secondary' : '#BBC0C5'}>\r\n            {todo.notes ? todo.notes : <span>No Notes</span>}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions style={{ display: 'flex', alignItems: 'center', paddingLeft: '20px', paddingRight: '10px' }}>\r\n          <FormControlLabel control={<Checkbox name=\"completed\" checked={todo.completed} color=\"success\" size=\"medium\" />} label=\"Completed\" />\r\n          <Typography variant=\"body2\" color={todo.subtasks.length ? '#2196F3' : '#BBC0C5'}>{todo.subtasks.length ? `(${todo.subtasks.length}) Subtasks` : 'No Subtasks'}</Typography>\r\n          <div style={{ flexGrow: 1 }}></div>\r\n          <IconButton color=\"error\">\r\n            <DeleteIcon></DeleteIcon>\r\n          </IconButton>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import * as React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from '../../redux/';\r\nimport { getTodos, getSingleTodo } from '../../redux/actions/todoActions';\r\nimport { RootState } from '../../redux/reducers';\r\nimport { Grid, Grow, Box } from '@mui/material';\r\nimport { TransitionGroup } from 'react-transition-group';\r\nimport TodoItem from './TodoItem';\r\nimport { Todo } from '../../interfaces/TodoInterface';\r\n\r\n\r\n\r\ninterface ITodoListProps {\r\n}\r\n\r\nconst TodoList: React.FunctionComponent<ITodoListProps> = (props) => {\r\n\r\n  const todos: Todo[] = useSelector((state: RootState) => state.todos[\"todos\"])\r\n  const dispatch = useDispatch();\r\n\r\n  // const { getAllTodos } = bindActionCreators(actionCreators, dispatch)\r\n\r\n  useEffect(() => {\r\n    dispatch(getTodos())\r\n  }, [])\r\n\r\n  return (\r\n    <div style={{ maxWidth: '80vw', margin: '20px auto' }}>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <Grid container justifyContent=\"start\" spacing={2}>\r\n          {todos.map((todo, i) => (\r\n            <Grid item xs={12} md={4} sm={6} key={todo.id}>\r\n              <TodoItem todo={todo}></TodoItem>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n\r\n      </Box>\r\n      {/* Todo List Component\r\n      <button onClick={() => dispatch(getSingleTodo(6))}>Just a button</button> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import { FunctionComponent } from \"react\";\r\nimport { Container, Typography } from \"@mui/material\";\r\n\r\nimport TodoForm from \"../components/forms/NewTodoForm\";\r\nimport TodoList from \"../components/Todos/TodoList\";\r\n\r\ninterface TodoListPageProps {\r\n\r\n}\r\n\r\nconst TodoListPage: FunctionComponent<TodoListPageProps> = () => {\r\n  return (\r\n    <div style={{ minWidth: '100vw' }}>\r\n      <Container maxWidth=\"sm\">\r\n        {/* <Typography\r\n          variant=\"h6\"\r\n          color=\"textSecondary\"\r\n          component=\"h2\"\r\n          gutterBottom\r\n        >\r\n          Add a todo\r\n        </Typography> */}\r\n      </Container>\r\n      <TodoForm />\r\n      <div style={{ width: '80vw', margin: '0px auto' }}>\r\n        <h1 style={{marginBottom: '5px'}}>Your Current Todos</h1>\r\n        <hr />\r\n      </div>\r\n\r\n      <TodoList />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoListPage;","import { Container, Typography } from \"@mui/material\";\r\nimport { FunctionComponent } from \"react\";\r\n\r\ninterface TodoDetailsPageProps {\r\n\r\n}\r\n\r\nconst TodoDetailsPage: FunctionComponent<TodoDetailsPageProps> = () => {\r\n  return (\r\n    <div>\r\n      <Container maxWidth=\"sm\">\r\n        <Typography\r\n          variant=\"h6\"\r\n          color=\"textSecondary\"\r\n          component=\"h2\"\r\n          gutterBottom\r\n        >\r\n          Add a todo\r\n        </Typography>\r\n\r\n        <h1>Todo Details Page</h1>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoDetailsPage;","import React from 'react';\nimport './App.css';\nimport {\n  Router,\n  Route,\n  Outlet,\n  ReactLocation,\n  Link,\n  useMatch,\n} from \"react-location\";\nimport TodoListPage from './pages/TodoListPage';\nimport TodoDetailsPage from './pages/TodoDetailsPage';\nimport SideNav from './components/common/SideNav';\nimport Navbar from './components/common/Navbar';\nimport Header from './components/Header';\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { makeStyles } from '@mui/styles';\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    page: {\n      background: '#f9f9f9',\n      width: '100%',\n      // padding: theme.spacing(3),\n      paddingLeft: '240px', paddingTop: \"64px\"\n    },\n    root: {\n      display: 'flex',\n    },\n    drawer: {\n      width: drawerWidth,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    active: {\n      background: '#f4f4f4'\n    },\n   \n    appBar: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n    date: {\n      flexGrow: 1\n    },\n   \n  }\n})\n\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#ed7d84\"\n    },\n    secondary: {\n      main: \"#49486c\"\n    },\n    success: {\n      main: \"#45b586\"\n    },\n    info: {\n      main: \"#2196F3\"\n    },\n    error: {\n      main: \"#e40422\"\n    },\n    warning: {\n      main: \"#FFC107\"\n    }\n  },\n  typography: {\n    fontFamily: \"Ubuntu\",\n    fontWeightLight: 300,\n    fontWeightRegular: 400,\n    fontWeightMedium: 500,\n    fontWeightBold: 700\n  }\n})\n\n\n\nconst routes: Route[] = [\n  {\n    path: \"/\",\n    element: <TodoListPage />,\n  },\n  {\n    path: \"todo\",\n    children: [\n      {\n        path: \":id\",\n        element: <TodoDetailsPage />,\n      },\n    ],\n  },\n  {\n    path: \"cart\",\n    element: <div>Cart Page</div>,\n  },\n];\n\nconst location = new ReactLocation();\n\nfunction App() {\n  const classes = useStyles()\n  return (\n    <ThemeProvider theme={theme}>\n      <Router routes={routes} location={location}>\n        {/* <SideNav /> */}\n        {/* <Navbar />  */}\n        {/* <Header title=\"Hello World\" color=\"red\" /> */}\n        <div>\n          <Outlet />\n        </div>\n\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Todo } from '../../interfaces/TodoInterface';\r\nimport { Action, ActionType, MessageType } from '../action-types/index';\r\n\r\ninterface TodoStateInterface {\r\n  todos: Todo[],\r\n  errors?: string[],\r\n  loading?: boolean,\r\n  message?: string,\r\n  messageType?: MessageType\r\n}\r\n\r\nconst initialState: TodoStateInterface = {\r\n  todos: [],\r\n  loading: false,\r\n  errors: [],\r\n  message: '',\r\n};\r\n\r\nexport default function todos(state = initialState, action: Action) {\r\n  console.log({ action })\r\n  switch (action.type) {\r\n    case ActionType.GET_TODOS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: \"Loading Todos\",\r\n        messageType: \"info\"\r\n      }\r\n    case ActionType.GET_TODOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        todos: action.todos,\r\n        message: action.message,\r\n      }\r\n    case ActionType.GET_TODO_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false,\r\n        message: action.message,\r\n      }\r\n    case ActionType.CREATE_TODO_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: \"Creating Todo Item\",\r\n        messageType: \"info\"\r\n      };\r\n    case ActionType.CREATE_TODO_SUCCESS:\r\n      console.log(action)\r\n      // state.todos.push(action.payload);\r\n      console.log({ state, newTodo: action.payload })\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          action.payload,\r\n          ...state.todos,\r\n        ],\r\n        loading: false,\r\n        message: action.message,\r\n        messageType: \"success\"\r\n      }\r\n    // case ActionType.UPDATE_TODO_REQUEST:\r\n    //   return state\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport todoReducer from \"./todoReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  todos: todoReducer,\r\n})\r\n\r\nexport default rootReducer\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { Todo } from \"../../interfaces/TodoInterface\";\r\nimport config from '../../utils/config';\r\nimport { Action, CREATE_TODO, GET_TODO, GET_TODOS } from \"../action-types\";\r\nconst apiUrl = `${config.baseUrl}/api/todos`\r\n\r\nfunction getAll() {\r\n  return fetch(apiUrl, {\r\n    method: \"GET\",\r\n    headers: {\r\n      contentType: \"application/json\"\r\n    }\r\n  })\r\n    .then(res => res.json())\r\n    .catch(e => { throw e })\r\n}\r\n\r\nfunction getSingle(id: number | string) {\r\n  return fetch(`${apiUrl}/${id}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      contentType: \"application/json\"\r\n    }\r\n  })\r\n    .then(res => res.json())\r\n    .catch(e => { throw e })\r\n}\r\n\r\nfunction create(todo: Todo) {\r\n  return fetch(apiUrl, {\r\n    method: \"POST\",\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(todo)\r\n  })\r\n    .then(res => res.json())\r\n    .catch(e => { throw e })\r\n}\r\n\r\nfunction update(id: number | string) {\r\n  return fetch(`${apiUrl}/${id}`, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      contentType: \"application/json\"\r\n    }\r\n  })\r\n    .then(res => res.json())\r\n    .catch(e => { throw e })\r\n}\r\n\r\nfunction deleteSingle(id: number | string) {\r\n  return fetch(`${apiUrl}/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      contentType: \"application/json\"\r\n    }\r\n  })\r\n    .then(res => res.json())\r\n    .catch(e => { throw e })\r\n}\r\n\r\nfunction deleteAll() {\r\n  return fetch(apiUrl, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      'Content-Type': \"application/json\"\r\n    }\r\n  })\r\n    .then(res => res.json())\r\n    .catch(e => { throw e })\r\n}\r\n\r\nfunction* getTodos(action: GET_TODOS) {\r\n  console.log({ action })\r\n  try {\r\n    const { message, success, errors, data } = yield call(getAll)\r\n    console.log({ data });\r\n    yield put({ type: 'GET_TODOS_SUCCESS', todos: data, message })\r\n  } catch (error: any) {\r\n    yield put({ type: 'GET_TODOS_FAILED', message: error.message })\r\n  }\r\n}\r\n\r\nfunction* getTodoDetails(action: GET_TODO) {\r\n  console.log({ action })\r\n  try {\r\n    const request = getSingle(action.payload)\r\n    const { message, success, errors, data } = yield request\r\n    console.log({ data });\r\n    yield put({ type: 'GET_TODO_SUCCESS', todos: data, message })\r\n  } catch (error: any) {\r\n    yield put({ type: 'GET_TODO_FAILED', message: error.message })\r\n  }\r\n}\r\n\r\nfunction* createTodo(action: CREATE_TODO) {\r\n  console.log({ action, payload: action.payload })\r\n  try {\r\n    const request = create(action.payload)\r\n    const { message, success, errors, data } = yield request\r\n    console.log({ data });\r\n    yield put({ type: 'CREATE_TODO_SUCCESS', payload: data, message })\r\n  } catch (error: any) {\r\n    yield put({ type: 'CREATE_TODO_FAILED', message: error.message })\r\n  }\r\n}\r\n\r\nfunction* todoSaga() {\r\n  yield takeEvery('GET_TODOS_REQUEST', getTodos)\r\n  yield takeEvery('GET_TODO_REQUEST', getTodoDetails)\r\n  yield takeEvery('CREATE_TODO_REQUEST', createTodo)\r\n  // yield takeEvery('UPDATE_TODO_REQUEST', getTodos)\r\n  // yield takeEvery('DELETE_TODO_REQUEST', getTodos)\r\n  // yield takeEvery('DELETE_TODOS_REQUEST', getTodos)\r\n}\r\n\r\nexport default todoSaga","export default {\r\n  // baseUrl: \"http://localhost:5000\"\r\n  baseUrl: \"https://spoke-todo.herokuapp.com\"\r\n}","import { all } from \"@redux-saga/core/effects\";\r\nimport todoSaga from \"./todoSaga\";\r\n\r\nexport default function* rootSaga(){\r\n  yield all(\r\n    [\r\n      todoSaga()\r\n    ]\r\n  )\r\n}","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from \"@redux-saga/core\";\r\n\r\nimport rootReducer from './reducers/index'\r\nimport rootSaga from './sagas/index';\r\n\r\nconst configureStore = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  return {\r\n      ...createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware))),\r\n      runSaga: sagaMiddleware.run(rootSaga),\r\n  };\r\n};\r\n\r\nexport default configureStore;\r\n\r\n// const sagaMiddleware = createSagaMiddleware()\r\n\r\n// declare global {\r\n//   interface Window {\r\n//     __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n//   }\r\n// }\r\n\r\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// export const store = compose(\r\n//   applyMiddleware(sagaMiddleware),\r\n// )(createStore)(rootReducers, composeEnhancers);\r\n\r\n// sagaMiddleware.run(rootSaga)\r\n// export default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport configureStore from './redux/store';\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}